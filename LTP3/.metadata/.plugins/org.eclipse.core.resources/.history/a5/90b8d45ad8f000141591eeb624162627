package cadastro;

import java.util.ArrayList;
import java.util.GregorianCalendar;
import utilitarios.Console;
import utilitarios.LtpUtil;
import dados.Cliente;
import dados.ItemVenda;
import dados.Produto;
import dados.Venda;

/*
�	Atributos: clientes (lista de Clientes), produtos (lista de Produtos), e lista de vendas (lista de Vendas). As listas devem ser implementadas usando a classe ArrayList. Todas est�ticas e com visibilidade publica;
�	Lista de Clientes
�	M�todo para incluir um novo cliente. Par�metro o cliente;
�	M�todo para excluir um cliente da lista de clientes. Par�metro o cliente.
�	M�todo para buscar o cliente pelo c�digo. Par�metro o c�digo. Retornar a mensagem �N�o existe cliente para o c�digo� para o caso de n�o achar o cliente, em um objeto SisVendasException.
�	M�todo para buscar o cliente pelo cpf. Par�metro o cpf. Retornar a mensagem �N�o existe cliente para o cpf� para o caso de n�o achar o cliente, em um objeto SisVendasException.
�	M�todo para obter lista de clientes em ordem alfab�tica pelo nome ou por parte do nome do cliente. Retornar a mensagem �N�o existe nenhum cliente para o nome� para o caso de n�o achar nenhum cliente, em um objeto SisVendasException.
�	Lista de Produtos
�	M�todo para incluir um novo produto. Par�metro o produto;
�	M�todo para excluir um produto da lista de produtos. Par�metro o produto.
�	M�todo para buscar o produto pelo c�digo. Par�metro o c�digo. Retornar a mensagem �N�o existe produto para o c�digo� para o caso de n�o achar o produto, em um objeto SisVendasException.
�	M�todo para obter lista de produtos em ordem alfab�tica pelo nome ou por parte do nome do produto. Retornar a mensagem �N�o existe nenhum produto para o nome� para o caso de n�o achar nenhum produto, em um objeto SisVendasException.
�	Lista de Vendas
�	M�todo para incluir uma nova venda. Par�metro a venda;
�	M�todo para excluir uma venda da lista de vendas. Par�metro a venda.
�	M�todo para buscar a venda pelo c�digo. Par�metro o c�digo. Retornar a mensagem �N�o existe venda para o c�digo� para o caso de n�o achar a venda, em um objeto SisVendasException.
�	M�todo para buscar as vendas para o cliente em ordem descendente do c�digo da venda. Par�metro o cliente. Retornar a mensagem �N�o existe nenhuma venda para o cliente� para o caso de n�o achar nenhuma venda, em um objeto SisVendasException.
�	M�todo para obter lista de vendas em ordem do nome do cliente e data da venda decrescente. Par�metro: per�odo das vendas;
�	M�todo para obter a Estat�stica de Vendas por cliente em ordem alfab�tica (Nome do cliente, quantas vezes comprou no per�odo e valor total da compras no per�odo). Par�metro: per�odo das vendas. Retorno: Lista EstatisticaClientes.


		this.codigo = codigo;
		this.cpf = cpf;
		this.nome = nome;
		this.telefone = telefone;
		this.email = email;
		this.dataInclusao = dataInclusao;
		this.dataAlteracao = dataAlteracao;


 */

public class Cadastro {

	static ArrayList<Produto> listaProdutos = new ArrayList<Produto>();
	public static ArrayList<Cliente> listaClientes = new ArrayList<Cliente>();
	static ArrayList<Venda> listaVendas = new ArrayList<Venda>();
	
	
	public static void incluirCliente (Cliente obj) {
		getListaClientes().add(obj);
	}
	
	public void excluirCliente (Cliente obj) {
		getListaClientes().remove(obj);
	}
	
	public static Cliente pesqClienteCod (int codigo) {
		for (Cliente obj : getListaClientes()) {
			if (obj.getCodigo() == codigo) {
				return obj;
			}
		}
		return null;
	}
	
	public static Cliente pesqClienteCpf (String cpf) {
		for (Cliente obj : getListaClientes()) {
			if (obj.getCpf().equals(cpf)) {
				return obj;
			}
		}
		System.out.println("Cpf não encontrado");
		return null;
	}
	
	public static void ordemAlfabeticaCliente (String nome) {
		
	}
	
	//Lista de produtos
	public static void incluirProduto (Produto obj) {
		listaProdutos.add(obj);
	}
	
	public static void excluirProduto (Produto obj) {
		listaProdutos.remove(obj);//Verificar se tem venda cadastrada
	}
	
	public static Produto pesqProdutoCod (int codigo) {
		for (Produto obj : listaProdutos) {
			if (obj.getCodigo() == codigo) {
				return obj;
			}
		}
		return null;
	}
	
	public static void ordemAlfabeticaProduto (String nome) {
		
	}
	//Lista de Vendas
	public static void incluirVenda(Venda obj) {
		listaVendas.add(obj);
	}
	
	public static void excluirVenda (Venda obj) {
		listaVendas.remove(obj);
	}
	
	public static Venda pesqVendaCod (int codigo) {
		for (Venda obj : listaVendas) {
			if (obj.getNumVenda() == codigo) {
				return obj;
			}
		}
		return null;
	}
	
	public static void pesqVendaCliente (Cliente cliente) {
		
	}
	
	//Verficar o parametro ...
	public static void pesqVendaClienteData () {
		
	}
	
	public static void estatisticaCliente (Cliente cliente) {
		
	}

	public static ArrayList<Cliente> getListaClientes() {
		return listaClientes;
	}

	public static void setListaClientes(ArrayList<Cliente> listaClientes) {
		Cadastro.listaClientes = listaClientes;
	}
}

