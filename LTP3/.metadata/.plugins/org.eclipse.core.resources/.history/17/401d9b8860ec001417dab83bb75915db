package usuario;

import java.util.ArrayList;
import java.util.GregorianCalendar;
import utilitarios.Console;
import utilitarios.LtpUtil;
import dados.Cliente;
import cadastro.Cadastro;

public class Usuario {
	public static void main(String args[]) {
		int opcao = 0;
		do {
			System.out.println("--------# Sistema de controle de vendas #--------");
			System.out.println("-1-Incluir novo cliente");
			System.out.println("-2-Alterar o cliente via codigo");
			System.out.println("-3-Excluir um cliente via codigo");
			System.out.println("-4-Consultar o cliente via cpf");
			System.out.println("-5-Consultar cliente em ordem alfabetica pelo nome");
			System.out.println("-6-Incluir um novo produto");
			System.out.println("-7-Alterar o produto via codigo");
			System.out.println("-8-Excluir o produto via codigo");
			System.out.println("-9-Consultar produto em ordem alfabetica pelo nome");
			System.out.println("-10-Incluir uma venda");
			System.out.println("-11-Excluir venda");
			System.out.println("-12-Consultar as vendas pelo periodo em ordem de cliente e data de venda");
			System.out.println("-13-Consultar estatisticas de venda por cliente");
			opcao = Console.readInt("Informe a opcao desejada: ");
			int codigo;
			switch (opcao) {
				case 1:
					incluirCliente();
					break;
				case 2:
					codigo = Console.readInt("Informe o codigo: ");
					buscarPorCod(codigo);
					String valida = Console.readLine("Você deseja alterar este cliente? ");
					System.out.println("Informe SIM OU NÂO");
						if (valida.equalsIgnoreCase("SIM")) {
							alterarClienteCod(codigo);
						} else {
							break;
						}
					break;
				case 3:
					codigo = Console.readInt("Informe o codigo: ");
					buscarPorCod(codigo);
					String valida1 = Console.readLine("Você deseja alterar este cliente? ");
					System.out.println("Informe SIM OU NÂO");
						if (valida1.equalsIgnoreCase("SIM")) {
							cadastro.Cadastro.excluirCliente(Cliente obj);
						} else {
							break;
						}
					break;
				case 4:
					String cpf = Console.readLine("Informe o cpf do cliente");
					break;
				case 5:
					
					break;
				case 6:
					
					break;
				case 7:
					
					break;
				case 8:
					
					break;
				case 9:
					
					break;
				case 10:
					
					break;
				case 11:
					
					break;
				case 12:
					
					break;
				case 13:
					
					break;
				default:
					System.out.println("Opção inválida!");
					break;
			}
		}while(opcao!=0);
		
	}
	//Incluir um novo cliente
	public static void incluirCliente() {
		System.out.println("\n" + "Incluir um novo cliente no banco.");
		String cpf;
		while(true) 
		{
			cpf = Console.readLine("CPF: ");
			if(!LtpUtil.validarCPF(cpf)) 
			{
				System.out.println("CPF inválida");
				continue;
			}
			Cliente objcliente = cadastro.Cadastro.pesqClienteCpf(cpf);
			if (objcliente!=null) 
			{
				System.out.println("Já existe cliente para o CPF");
				continue;
			} else break;
		}
		String nome;
		String telefone;
		String email;
		while (true) 
		{
			nome = Console.readLine("Nome: ").trim();
			if (nome.isEmpty()) 
			{
				System.out.println("Falta informar o nome.");
			} else break;
		}
		while (true) 
		{
			telefone = Console.readLine("Telefone: ");
			if (telefone.isEmpty()) 
			{
				System.out.println("Falta informar o telefone.");
			} else break;
		}
		while (true) 
		{
			email = Console.readLine("E-mail: ");
			if (email.isEmpty()) 
			{
				System.out.println("Falta informar o e-mail.");
			} else break;
		}
		GregorianCalendar dataInclusao = new GregorianCalendar();
		while(true) {
			String data = Console.readLine("Data de cadastro: ");
			if(!LtpUtil.validarData(data, dataInclusao)) {
				System.out.println("Data inválida.");
				continue;
			}
			if (dataInclusao.after(new GregorianCalendar())) {
				System.out.println("Data entrada superior a data de hoje");
			} else break;
		}
		
		ArrayList<Cliente> clientes = new ArrayList<Cliente>();
		clientes.add(new Cliente(cpf, nome, telefone, email, dataInclusao, null));
		System.out.println("\nCliente cadastradono sistema.");
	}
	//Alterar o cliente via codigo
	private static void alterarClienteCod (int cod) {
		System.out.println("\n" + "Alterar um cliente no sistema.");
		String cpf;
		while(true) 
		{
			cpf = Console.readLine("CPF: ");
			if(!LtpUtil.validarCPF(cpf)) 
			{
				System.out.println("CPF inválida");
				continue;
			}
			Cliente objcliente = cadastro.Cadastro.pesqClienteCpf(cpf);
			if (objcliente!=null) 
			{
				System.out.println("Já existe cliente para o CPF");
				continue;
			} else break;
		}
		String nome;
		String telefone;
		String email;
		while (true) 
		{
			nome = Console.readLine("Nome: ").trim();
			if (nome.isEmpty()) 
			{
				System.out.println("Falta informar o nome.");
			} else break;
		}
		while (true) 
		{
			telefone = Console.readLine("Telefone: ");
			if (telefone.isEmpty()) 
			{
				System.out.println("Falta informar o telefone.");
			} else break;
		}
		while (true) 
		{
			email = Console.readLine("E-mail: ");
			if (email.isEmpty()) 
			{
				System.out.println("Falta informar o e-mail.");
			} else break;
		}
		GregorianCalendar dataInclusao = new GregorianCalendar();
		while(true) {
			String data = Console.readLine("Data de cadastro: ");
			if(!LtpUtil.validarData(data, dataInclusao)) {
				System.out.println("Data inválida.");
				continue;
			}
			if (dataInclusao.after(new GregorianCalendar())) {
				System.out.println("Data entrada superior a data de hoje");
			} else break;
		}
		
		ArrayList<Cliente> clientes = new ArrayList<Cliente>();
		clientes.add(new Cliente(cpf, nome, telefone, email, dataInclusao, null));
		System.out.println("\nCliente cadastradono sistema.");
		System.out.println("O codigo gerado para " + nome + " é " + codigo);
	}

	private static Cliente buscarPorCpf(String cpf) {
		Cliente obj = cadastro.Cadastro.pesqClienteCpf(cpf);
		if (obj != null) { 
			System.out.println(obj.toString());
		} else {
			System.out.println("Não existe cliente neste codigo");
		}
		return null;
	}

	private static Cliente buscarPorCod(int codigo) {
		Cliente obj = cadastro.Cadastro.pesqClienteCod(codigo);
		if (obj != null) { 
			System.out.println(obj.toString());
		} else {
			System.out.println("Não existe cliente neste codigo");
		}
		return null;
	}
}
